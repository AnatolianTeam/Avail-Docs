"use strict";(self.webpackChunkavail_doc=self.webpackChunkavail_doc||[]).push([[493],{5739:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=a(5893),t=a(1151);a(4996);const o={id:"relay",title:"Relay Node Nas\u0131l \xc7al\u0131\u015ft\u0131r\u0131l\u0131r?",sidebar_label:"Relay Node",sidebar_position:5,description:"Bir Avail Relay Node'un nas\u0131l \xe7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 \xf6\u011frenin.",keywords:["docs","avail","node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},r=void 0,l={id:"operate-a-node/run-a-full-node/relay",title:"Relay Node Nas\u0131l \xc7al\u0131\u015ft\u0131r\u0131l\u0131r?",description:"Bir Avail Relay Node'un nas\u0131l \xe7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 \xf6\u011frenin.",source:"@site/docs/operate-a-node/run-a-full-node/0060-relay-node.md",sourceDirName:"operate-a-node/run-a-full-node",slug:"/operate-a-node/run-a-full-node/relay",permalink:"/operate-a-node/run-a-full-node/relay",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"relay",title:"Relay Node Nas\u0131l \xc7al\u0131\u015ft\u0131r\u0131l\u0131r?",sidebar_label:"Relay Node",sidebar_position:5,description:"Bir Avail Relay Node'un nas\u0131l \xe7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 \xf6\u011frenin.",keywords:["docs","avail","node","data availability","da"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"tutorialSidebar",previous:{title:"Bootstrap Node",permalink:"/operate-a-node/run-a-full-node/bootstrap"},next:{title:"Validator Olun",permalink:"/category/validator-olun"}},s={},d=[{value:"Step 1: Compile the Binary",id:"step-1-compile-the-binary",level:2},{value:"Step 2: Deploy the Binary",id:"step-2-deploy-the-binary",level:2},{value:"Step 3: Create and Edit the Configuration File",id:"step-3-create-and-edit-the-configuration-file",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This guide provides a step-by-step walkthrough for setting up a relay node, which can help resolve connectivity issues between network peers."}),"\n",(0,i.jsx)(n.admonition,{title:"Before you start",type:"note",children:(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Ensure that you meet the ",(0,i.jsx)(n.a,{href:"/operate-a-node/run-a-full-node/system-requirements",children:(0,i.jsx)("ins",{children:"system requirements"})}),"."]})})}),"\n",(0,i.jsx)(n.h2,{id:"step-1-compile-the-binary",children:"Step 1: Compile the Binary"}),"\n",(0,i.jsx)(n.p,{children:"Navigate to the project directory and compile the source code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd avail-light-relay\ncargo build --release                # Compile the project in release mode\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Upon successful compilation, the binary will be located at ",(0,i.jsx)(n.code,{children:"target/release/avail-light-relay"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"step-2-deploy-the-binary",children:"Step 2: Deploy the Binary"}),"\n",(0,i.jsxs)(n.p,{children:["If you've compiled the binary locally, transfer it to your server using ",(0,i.jsx)(n.code,{children:"scp"})," or another secure method."]}),"\n",(0,i.jsx)(n.h2,{id:"step-3-create-and-edit-the-configuration-file",children:"Step 3: Create and Edit the Configuration File"}),"\n",(0,i.jsxs)(n.p,{children:["On your server, navigate to the directory where you've placed the binary. Create and edit a ",(0,i.jsx)(n.code,{children:"config.yaml"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"touch config.yaml                    # Create a new config.yaml file\nnano config.yaml                     # Open the file in a text editor\n"})}),"\n",(0,i.jsx)(n.p,{children:"To avoid conflicts between nodes, especially if they are running on the same machine or network, consider the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"libp2p_port"}),": This could potentially cause a conflict if multiple nodes are running on the same machine and trying to bind to the same port. Each node on the same machine should have a unique port."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"secret_key"}),": If this is used for cryptographic operations like signing messages, then using the same key across different nodes could be a security risk and could also lead to logical errors in the network operation."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Use the following example configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"log_level: 'INFO' # Logging level\nlog_format_json: false # Log format\nsecret_key: { seed: 'unique_seed' } # Secret key setting\nlibp2p_port: 39000 # libp2p port\nlibp2p_identify_protocol: '/avail_kad/id/1.0.0' # libp2p protocol\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For more advanced configurations, consult the ",(0,i.jsx)(n.a,{href:"https://github.com/availproject/avail-light-relay#config-reference",children:(0,i.jsx)("ins",{children:"Configuration Reference"})}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>r});var i=a(7294);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);