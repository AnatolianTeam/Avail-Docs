"use strict";(self.webpackChunkavail_doc=self.webpackChunkavail_doc||[]).push([[2323],{9932:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=a(5893),o=a(1151),s=a(4996);const t={id:"upgrade",title:"Avail Do\u011frulay\u0131c\u0131n\u0131z\u0131 Nas\u0131l Y\xfckseltirsiniz?",sidebar_label:"Do\u011frulay\u0131c\u0131n\u0131z\u0131 Y\xfckseltin",sidebar_position:5,"a\xe7\u0131klama":"Do\u011frulay\u0131c\u0131y\u0131 y\xfckseltme hakk\u0131nda bilgi edinin",keywords:["docs","avail","node","validator"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},r=void 0,l={id:"operate-a-node/become-a-validator/upgrade",title:"Avail Do\u011frulay\u0131c\u0131n\u0131z\u0131 Nas\u0131l Y\xfckseltirsiniz?",description:"When upgrading Avail nodes there are two options, a faster method and a slower (but safer) method. Both are detailed below, but you only need to use one of them.",source:"@site/docs/operate-a-node/become-a-validator/0060-validator-upgrade.md",sourceDirName:"operate-a-node/become-a-validator",slug:"/operate-a-node/become-a-validator/upgrade",permalink:"/operate-a-node/become-a-validator/upgrade",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"upgrade",title:"Avail Do\u011frulay\u0131c\u0131n\u0131z\u0131 Nas\u0131l Y\xfckseltirsiniz?",sidebar_label:"Do\u011frulay\u0131c\u0131n\u0131z\u0131 Y\xfckseltin",sidebar_position:5,"a\xe7\u0131klama":"Do\u011frulay\u0131c\u0131y\u0131 y\xfckseltme hakk\u0131nda bilgi edinin",keywords:["docs","avail","node","validator"],image:"https://docs.availproject.org/img/avail/AvailDocs.png"},sidebar:"tutorialSidebar",previous:{title:"Do\u011frulay\u0131c\u0131n\u0131z\u0131 Yedekleyin",permalink:"/operate-a-node/become-a-validator/backup"},next:{title:"Do\u011frulay\u0131c\u0131n\u0131z\u0131 \u0130zleyin",permalink:"/operate-a-node/become-a-validator/monitor"}},d={},c=[{value:"Fast Upgrade",id:"fast-upgrade",level:2},{value:"Slow &amp; Safe Upgrade",id:"slow--safe-upgrade",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"When upgrading Avail nodes there are two options, a faster method and a slower (but safer) method. Both are detailed below, but you only need to use one of them."}),"\n",(0,i.jsx)(n.h2,{id:"fast-upgrade",children:"Fast Upgrade"}),"\n",(0,i.jsx)(n.p,{children:"While a rapid upgrade is possible, it carries inherent risks if done on a validator node. For instance, if you proceed with the upgrade on a validator node and encounter issues such as database corruption, there's a chance of prolonged downtime. This could lead to your node being removed from the active validator set due to unresponsiveness."}),"\n",(0,i.jsx)(n.p,{children:"This upgrade process is appropriate for non-validator nodes. However, this upgrade process is still possible on validator nodes with careful consideration."}),"\n",(0,i.jsx)(n.p,{children:"The fast upgrade steps are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stop the Avail node."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl stop availd.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate your Avail binary, create a backup of the current binary, and then uninstall the existing binary by deleting the binary. Proceed to download the most recent binary announced in Discord, which will replace the previous binary version.\nTo provide an example, assuming your existing binary is located at ",(0,i.jsx)(n.code,{children:"/home/avail/avail-node/"})," and is named ",(0,i.jsx)(n.code,{children:"data-avail"}),", and you used the ",(0,i.jsx)(n.a,{href:"/category/run-a-validator-node/",children:"validator"})," setup guidelines while obtaining a pre-built binary from the Avail GitHub repository, proceed as outlined below."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd /home/avail/avail-node/\nmv data-avail data-avail-backup\nwget https://github.com/availproject/avail/releases/download/v1.6.2-rc1/data-avail-linux-amd64.tar.gz\ntar -xvf data-avail-linux-amd64.tar.gz\nmv data-avail-linux-amd64 data-avail\nrm data-avail-linux-amd64.tar.gz\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Start the Avail node again."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl start availd.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure your node starts syncing with the network, view the logs from the running service."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"journalctl -f -u availd.service\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Also check that your node is visible on telemetry and the version matches the upgrade version."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"slow--safe-upgrade",children:"Slow & Safe Upgrade"}),"\n",(0,i.jsx)(n.p,{children:"This upgrade procedure is most appropriate for validator nodes exclusively and is unnecessary for other types of nodes, such as full, archive, rpc, and so forth. Upgrading a Avail node safely is a careful process to ensure a smooth transition without disruption to the network. Here's a step-by-step guide on how to upgrade a Avail node,\nincluding the process of switching nodes using rotated keys:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Preparing for the Upgrade:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure you have a backup of your node's data and keystore files. This ensures you can restore your node in case of any issues during the upgrade process.\nFamiliarize yourself with the release notes and documentation of the new Avail version to understand any specific instructions or requirements."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Setting up Node B:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Install and set up the new version of Avail on a separate server or machine. This will be Node B, which will eventually replace Node A. Configure Node B with the\nnecessary configuration files, including the customizations you had on Node A. Ensure that Node B is fully synchronized with the Avail network before proceeding."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Generating Rotated Keys:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Generate a new set of keys for Node B using ",(0,i.jsx)(n.code,{children:"author_rotateKeys"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Updating Session Keys:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open Avail Apps and navigate to ",(0,i.jsx)(n.a,{href:"https://testnet.avail.tools/#/staking/actions",children:(0,i.jsx)(n.strong,{children:"Network \u2192 Staking"})}),". You will be able to select from a hidden menu the option\nto change session keys."]}),"\n"]}),"\n",(0,i.jsx)("img",{src:(0,s.Z)("img/avail/validator-change-session-keys.png"),width:"100%",height:"100%"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Can enter the hex-encoded value obtained from ",(0,i.jsx)(n.code,{children:"author_rotateKeys"})," and click on ",(0,i.jsx)(n.strong,{children:"Set Session Key"}),"."]}),"\n"]}),"\n",(0,i.jsx)("img",{src:(0,s.Z)("img/avail/validator-change-session-keys-2.png"),width:"100%",height:"100%"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You will now be able to see the new and old hex-encoded value. In the next epoch or two it will only show the new hex-encoded\nvalue."}),"\n"]}),"\n",(0,i.jsx)("img",{src:(0,s.Z)("img/avail/validator-change-session-keys-3.png"),width:"100%",height:"100%"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["After a few epochs Node B will be performing the validator tasks. You must ensure this by looking in the logs for sealed blocks. You should see ",(0,i.jsx)(n.code,{children:"\ud83c\udf81 Prepared block for proposing"})," appear\nin the logs of Node B and stop appearing Node A."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You can now upgrade Node A. You can repeat the process to switch back to Node A."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Ensure the node has switched",type:"warning",children:(0,i.jsx)(n.p,{children:"Before turning Node A off you must ensure Node B has become the active validator. In Avail Apps it may show the switch, however there is an epoch delay before the node\nfully switches over. The best is to look in the logs and confirm the new node is sealing the blocks."})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>r,a:()=>t});var i=a(7294);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);